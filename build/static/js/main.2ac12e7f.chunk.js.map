{"version":3,"sources":["redux/constants/page.js","redux/actions/page.js","components/pokemon.js","components/search.js","components/page.js","containers/page.js","redux/reducers/page.js","redux/reducers/index.js","index.js","redux/store/configure-store.js"],"names":["GET_POKEMONS_REQUEST","GET_POKEMONS_SUCCESS","GET_POKEMONS_FAIL","SET_POKEMONS","FILTER_POKEMONS","setPokemons","data","pokemons","results","map","pokemon","url","id","substring","length","type","payload","filterPokemons","searchString","dispatch","getState","displayedPokemons","page","Pokemon","props","state","moreInfo","onMoreInfoClick","bind","this","pokemonId","self","fetch","then","ok","json","setState","types","name","typeH","img","typeCls","moves","className","style","marginLeft","toString","toUpperCase","alt","src","color","PureComponent","Search","onChange","class","role","placeholder","Page","getPokemons","event","currentTarget","value","isFetched","error","data-toggle","data-target","href","handleSearch","marginTop","Component","mapDispatchToProps","mockData","slice","pageActions","connect","initialState","combineReducers","action","filteredDisplayedPokemons","filter","includes","toLowerCase","store","middlewares","thunkMiddleware","composeEnhancers","compose","createStore","rootReducer","applyMiddleware","configureStore","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ac12e7f.chunk.js","sourcesContent":["export const GET_POKEMONS_REQUEST = 'GET_POKEMONS_REQUEST'\nexport const GET_POKEMONS_SUCCESS = 'GET_POKEMONS_SUCCESS'\nexport const GET_POKEMONS_FAIL = 'GET_POKEMONS_FAIL'\nexport const SET_POKEMONS = 'SET_POKEMONS'\nexport const FILTER_POKEMONS = 'FILTER_POKEMONS'\n","import {\n  GET_POKEMONS_REQUEST,\n  GET_POKEMONS_SUCCESS,\n  GET_POKEMONS_FAIL,\n  SET_POKEMONS,\n  FILTER_POKEMONS\n} from '../constants/page'\nimport mockData from './data/mock'\nconst isMock = true\n\nfunction setPokemons(data) {\n  const pokemons = data.results.map(pokemon => {\n    let { url } = pokemon\n    pokemon.id = url.substring(34, url.length - 1)\n\n    return pokemon\n  })\n\n  return {\n    type: SET_POKEMONS,\n    payload: pokemons\n  }\n}\n/**\n * public function getPokemons - retrieve list of pokemons\n */\nexport function getPokemons() {\n  return dispatch => {\n    dispatch({\n      type: GET_POKEMONS_REQUEST\n    })\n    if (isMock) {\n      dispatch({\n        type: GET_POKEMONS_SUCCESS\n      })\n      mockData.results = mockData.results.slice(0, 10)\n      dispatch(setPokemons(mockData))\n      dispatch(filterPokemons())\n    } else {\n      return fetch(`https://pokeapi.co/api/v2/pokemon/?limit=4&offset=1`)\n        .then(response => {\n          if (response.ok) {\n            return response.json()\n          }\n\n          throw new Error(`${response.status}: ${response.statusText}`)\n        })\n        .then(data => {\n          dispatch({\n            type: GET_POKEMONS_SUCCESS\n          })\n          dispatch(setPokemons(data))\n          dispatch(filterPokemons())\n        })\n        .catch(error => {\n          dispatch({\n            type: GET_POKEMONS_FAIL,\n            payload: error.message\n          })\n        })\n    }\n  }\n}\n\nexport function filterPokemons(searchString = '') {\n  return (dispatch, getState) => {\n    let displayedPokemons = getState().page.pokemons\n    dispatch({\n      type: FILTER_POKEMONS,\n      payload: {\n        displayedPokemons,\n        searchString\n      }\n    })\n  }\n}\n","import React, { PureComponent } from 'react'\n\nclass Pokemon extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      moreInfo: {}\n    }\n    this.onMoreInfoClick = this.onMoreInfoClick.bind(this)\n  }\n  componentWillMount() {\n    this.onMoreInfoClick()\n  }\n  onMoreInfoClick() {\n    let pokemonId = this.props.pokemon.id\n    let self = this\n    fetch('https://pokeapi.co/api/v2/pokemon/' + pokemonId + '/')\n      .then(data => {\n        if (data.ok) {\n          return data.json()\n        }\n      })\n      .then(data => {\n        self.setState({\n          moreInfo: data\n        })\n      })\n  }\n\n  render() {\n    const { pokemon } = this.props\n    let moreInfo = this.state.moreInfo\n    let type =\n      (moreInfo &&\n        moreInfo.types &&\n        moreInfo.types.length > 0 &&\n        moreInfo.types[0].type &&\n        moreInfo.types[0].type.name) ||\n      'N/A'\n    let typeH =\n      (moreInfo &&\n        moreInfo.types &&\n        moreInfo.types.length > 1 &&\n        moreInfo.types[1].type &&\n        moreInfo.types[1].type.name) ||\n      'N/A'\n\n    let img = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\n      pokemon.id\n    }.png`\n    let typeCls = 'label type type-' + type\n    let moves = moreInfo && moreInfo.types ? moreInfo.moves : []\n    return (\n      <div className=\"pokemon panel panel-primary\">\n        <div className=\"panel-heading\">\n          <h1 className=\"\">\n            {pokemon.name}\n            <small className=\"\" style={{ marginLeft: '5px' }}>\n              {typeH !== 'N/A'\n                ? typeH.toString().toUpperCase()\n                : type.toString().toUpperCase()}{' '}\n              Pok√©mon\n            </small>\n            <span className=\"label label-primary pull-right\">\n              #{pokemon.id}\n            </span>\n          </h1>\n        </div>\n        <div className=\"panel-body\">\n          <img className=\"avatar center-block\" alt=\"avatar\" src={img} />\n        </div>\n        <div className=\"panel-footer\">\n          <div className=\"text-center\">\n            <span className={typeCls}>{type.toString().toUpperCase()}</span>\n            <br />\n            <span style={{ color: 'black' }}>#{moves.length} moves</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Pokemon\n","import React from 'react'\n\nconst Search = ({ onChange }) => (\n  <div class=\"col-sm-12 col-md-6 col-lg-6\">\n    <form class=\"navbar-form\" role=\"search\">\n      <input\n        type=\"text\"\n        onChange={onChange}\n        className=\"form-control\"\n        placeholder=\"Enter pokemon name...\"\n      />\n    </form>\n  </div>\n)\n\nexport default Search\n","import React, { Component } from 'react'\nimport Pokemon from '../components/pokemon'\nimport Search from '../components/search'\n\nclass Page extends Component {\n  componentDidMount() {\n    this.props.getPokemons()\n  }\n\n  handleSearch(event) {\n    this.props.filterPokemons(event.currentTarget.value)\n  }\n\n  render() {\n\tconst s = 1;\n\ts= 2;\n    let { displayedPokemons, isFetched, error } = this.props\n\n    let pokemons = displayedPokemons.map(pokemon => {\n      return (\n        <div className=\"col-lg-3\" key={pokemon.id}>\n          <Pokemon pokemon={pokemon} />\n        </div>\n      )\n    })\n\n    return (\n      <div>\n        <div\n          className=\"navbar navbar-inverse navbar-fixed-top\"\n          role=\"navigation\"\n        >\n          <div className=\"container-fluid\">\n            <div className=\"navbar-header\">\n              <button\n                type=\"button\"\n                className=\"navbar-toggle collapsed\"\n                data-toggle=\"collapse\"\n                data-target=\".navbar-collapse\"\n              >\n                <span className=\"sr-only\">Toggle navigation</span>\n                <span className=\"icon-bar\" />\n                <span className=\"icon-bar\" />\n                <span className=\"icon-bar\" />\n              </button>\n              <a href=\"/\" className=\"navbar-brand\">\n                <img src=\"logo.png\" alt=\"logo\" />\n                Pok√©dex\n              </a>\n            </div>\n            <Search onChange={this.handleSearch.bind(this)} />\n          </div>\n        </div>\n        <div className=\"container-fluid\" style={{ marginTop: '5em' }}>\n          {error && <div className=\"page__error\">{error}</div>}\n          <div className=\"page__search\" />\n          {isFetched ? (\n            <p>Loading, please wait...</p>\n          ) : (\n            <div className=\"col-lg-12\">{pokemons}</div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Page\n","import { connect } from 'react-redux'\nimport * as pageActions from '../redux/actions/page'\nimport Page from '../components/page'\n\n/**\n * mapStateToProps\n * @param {*} state\n */\nfunction mapStateToProps(state) {\n  const { displayedPokemons, isFetched, error } = state.page\n\n  return {\n    displayedPokemons,\n    isFetched,\n    error\n  }\n}\n\nconst mapDispatchToProps = {\n  getPokemons: pageActions.getPokemons,\n  filterPokemons: pageActions.filterPokemons\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page)\n","import {\n  GET_POKEMONS_REQUEST,\n  GET_POKEMONS_SUCCESS,\n  GET_POKEMONS_FAIL,\n  SET_POKEMONS,\n  FILTER_POKEMONS\n} from '../constants/page'\n\nconst initialState = {\n  isFetched: false,\n  error: null,\n  pokemons: [],\n  displayedPokemons: []\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_POKEMONS_REQUEST:\n      return {\n        ...state,\n        isFetched: true\n      }\n\n    case GET_POKEMONS_SUCCESS:\n      return {\n        ...state,\n        isFetched: false\n      }\n\n    case GET_POKEMONS_FAIL:\n      return {\n        ...state,\n        isFetched: false,\n        error: action.payload\n      }\n\n    case SET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload\n      }\n\n    case FILTER_POKEMONS:\n      const { displayedPokemons, searchString } = action.payload\n      let filteredDisplayedPokemons = displayedPokemons.filter(pokemon => {\n        return pokemon.name.includes(searchString.toLowerCase())\n      })\n      return {\n        ...state,\n        displayedPokemons: filteredDisplayedPokemons\n      }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport page from './page'\n\nexport default combineReducers({\n  page\n})\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport Page from './containers/page'\nimport './style/main.css'\nimport configureStore from './redux/store/configure-store'\n\nconst store = configureStore()\n\nrender(\n  <Provider store={store}>\n    <Page />\n  </Provider>,\n  document.getElementById('root')\n)\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n// import { createLogger } from 'redux-logger'\nimport rootReducer from '../reducers'\n\nexport default function configureStore(initialState = {}) {\n  const middlewares = [thunkMiddleware]\n\n  let composeEnhancers = compose\n\n  if (process.env.NODE_ENV === 'development') {\n    if ('__REDUX_DEVTOOLS_EXTENSION_COMPOSE__' in window) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    }\n\n    //const loggerMiddleware = createLogger()\n    //middlewares.push(loggerMiddleware)\n  }\n\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  )\n}\n"],"sourceRoot":""}